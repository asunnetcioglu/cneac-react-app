{"ast":null,"code":"var _jsxFileName = \"/Users/apo-macbookpro/Desktop/react-projects/cneac-react/src/components/App.js\";\nimport React, { Component } from 'react';\nimport Header from './header/header';\nimport Content from \"./content/content\";\nimport Footer from \"./footer/footer\";\nimport './App.scss';\nimport $ from \"jquery\"; //import Slider from \"react-slick\";\n//import \"slick-carousel/slick/slick.css\";\n//import \"slick-carousel/slick/slick-theme.css\";\n\n$(document).ready(function () {\n  // sticky & expanding navbar defaults\n  var navbar, navbarWidth, bodyWidth, scrollLimit, navbarSpace, factor, windowTop, calculatedAdd, maxWidth;\n  navbar = $('.header .navbar');\n  scrollLimit = 48; //navbar top position\n\n  function navbarSpace() {\n    navbarWidth = navbar.width();\n    bodyWidth = $('body').width();\n    navbarSpace = bodyWidth - navbarWidth;\n  }\n\n  $(window).on('load resize', function () {\n    navbarSpace();\n  });\n  $(window).on('scroll', function () {\n    windowTop = $(window).scrollTop(); // expanding & sticky navbar\n\n    factor = navbarSpace / scrollLimit;\n    calculatedAdd = Math.floor(windowTop / 100 * factor * 100);\n    maxWidth = navbarWidth + calculatedAdd;\n\n    if (windowTop < scrollLimit) {\n      navbar.css('max-width', maxWidth);\n      navbar.removeClass('sticky');\n    } else {\n      navbar.css('max-width', '100%');\n      navbar.addClass('sticky');\n    } // sticky messenger button\n\n\n    if (windowTop > 100) {\n      $('#messengerButton').css('bottom', 0);\n    } else {\n      $('#messengerButton').css('bottom', '-5rem');\n    }\n  });\n});\n\nclass App extends Component {\n  render() {\n    return /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nexport default App;\n/*\nfunction AlertDismissibleExample() {\n  const [show, setShow] = useState(false);\n\n  if (show) {\n    return (\n        <Alert variant=\"danger\" onClose={() => setShow(false)} dismissible>\n          <Alert.Heading>I am an alert of type <span className=\"dangerText\">danger</span>! But my color is Teal!</Alert.Heading>\n          <p>\n            By the way the button you just clicked is an <span className=\"infoText\">Info</span> button but is using the color Tomato.\n            Lorem ipsum dolor sit amet, consectetur adipisicing elit.\n            Accusantium debitis deleniti distinctio impedit officia reprehenderit suscipit voluptatibus. Earum, nam necessitatibus!\n          </p>\n        </Alert>\n    );\n  }\n  return <Button variant=\"info\" onClick={() => setShow(true)}>Show Custom Styled Alert</Button>;\n}\n\nconst App = () => (\n    <Container className=\"p-3\">\n      <Jumbotron className=\"pb-1\">\n        <h1 className=\"header\">Welcome To React-Bootstrap</h1>\n        <h2 className=\"header\">Using Sass with custom theming</h2>\n        <AlertDismissibleExample />\n        <hr/>\n        <p>\n          You can check further in information on the official Bootstrap docs <a href=\"https://getbootstrap.com/docs/4.3/getting-started/theming/#importing\" target=\"_blank\">here</a>.\n        </p>\n      </Jumbotron>\n    </Container>\n);\n\nexport default App;*/","map":{"version":3,"sources":["/Users/apo-macbookpro/Desktop/react-projects/cneac-react/src/components/App.js"],"names":["React","Component","Header","Content","Footer","$","document","ready","navbar","navbarWidth","bodyWidth","scrollLimit","navbarSpace","factor","windowTop","calculatedAdd","maxWidth","width","window","on","scrollTop","Math","floor","css","removeClass","addClass","App","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAO,YAAP;AACA,OAAOC,CAAP,MAAc,QAAd,C,CACA;AACA;AACA;;AAEAA,CAAC,CAACC,QAAD,CAAD,CAAYC,KAAZ,CAAkB,YAAU;AACxB;AACA,MAAIC,MAAJ,EAAWC,WAAX,EAAuBC,SAAvB,EAAiCC,WAAjC,EAA6CC,WAA7C,EAAyDC,MAAzD,EAAgEC,SAAhE,EAA0EC,aAA1E,EAAwFC,QAAxF;AAEAR,EAAAA,MAAM,GAAGH,CAAC,CAAC,iBAAD,CAAV;AACAM,EAAAA,WAAW,GAAG,EAAd,CALwB,CAKN;;AAElB,WAASC,WAAT,GAAsB;AAClBH,IAAAA,WAAW,GAAGD,MAAM,CAACS,KAAP,EAAd;AACAP,IAAAA,SAAS,GAAGL,CAAC,CAAC,MAAD,CAAD,CAAUY,KAAV,EAAZ;AACAL,IAAAA,WAAW,GAAGF,SAAS,GAAGD,WAA1B;AACH;;AAEDJ,EAAAA,CAAC,CAACa,MAAD,CAAD,CAAUC,EAAV,CAAa,aAAb,EAA4B,YAAU;AAClCP,IAAAA,WAAW;AACd,GAFD;AAIAP,EAAAA,CAAC,CAACa,MAAD,CAAD,CAAUC,EAAV,CAAa,QAAb,EAAuB,YAAU;AAE7BL,IAAAA,SAAS,GAAGT,CAAC,CAACa,MAAD,CAAD,CAAUE,SAAV,EAAZ,CAF6B,CAI7B;;AACAP,IAAAA,MAAM,GAAGD,WAAW,GAAGD,WAAvB;AACAI,IAAAA,aAAa,GAAGM,IAAI,CAACC,KAAL,CAAaR,SAAS,GAAG,GAAb,GAAqBD,MAAtB,GAAgC,GAA3C,CAAhB;AACAG,IAAAA,QAAQ,GAAGP,WAAW,GAAGM,aAAzB;;AACA,QAAID,SAAS,GAAGH,WAAhB,EAA6B;AACzBH,MAAAA,MAAM,CAACe,GAAP,CAAW,WAAX,EAAuBP,QAAvB;AACAR,MAAAA,MAAM,CAACgB,WAAP,CAAmB,QAAnB;AACH,KAHD,MAGO;AACHhB,MAAAA,MAAM,CAACe,GAAP,CAAW,WAAX,EAAuB,MAAvB;AACAf,MAAAA,MAAM,CAACiB,QAAP,CAAgB,QAAhB;AACH,KAd4B,CAgB7B;;;AACA,QAAIX,SAAS,GAAG,GAAhB,EAAqB;AACjBT,MAAAA,CAAC,CAAC,kBAAD,CAAD,CAAsBkB,GAAtB,CAA0B,QAA1B,EAAmC,CAAnC;AACH,KAFD,MAEO;AACHlB,MAAAA,CAAC,CAAC,kBAAD,CAAD,CAAsBkB,GAAtB,CAA0B,QAA1B,EAAmC,OAAnC;AACH;AAEJ,GAvBD;AAwBH,CAzCD;;AA6CA,MAAMG,GAAN,SAAkBzB,SAAlB,CAA4B;AAC1B0B,EAAAA,MAAM,GAAG;AAEP,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAGI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CADJ;AAQD;;AAXyB;;AAgB5B,eAAeD,GAAf;AAEA","sourcesContent":["import React, {Component} from 'react';\nimport Header from './header/header';\nimport Content from \"./content/content\";\nimport Footer from \"./footer/footer\";\nimport './App.scss';\nimport $ from \"jquery\";\n//import Slider from \"react-slick\";\n//import \"slick-carousel/slick/slick.css\";\n//import \"slick-carousel/slick/slick-theme.css\";\n\n$(document).ready(function(){\n    // sticky & expanding navbar defaults\n    var navbar,navbarWidth,bodyWidth,scrollLimit,navbarSpace,factor,windowTop,calculatedAdd,maxWidth;\n\n    navbar = $('.header .navbar');\n    scrollLimit = 48; //navbar top position\n\n    function navbarSpace(){\n        navbarWidth = navbar.width();\n        bodyWidth = $('body').width();\n        navbarSpace = bodyWidth - navbarWidth;\n    }\n\n    $(window).on('load resize', function(){\n        navbarSpace();\n    });\n\n    $(window).on('scroll', function(){\n\n        windowTop = $(window).scrollTop()\n\n        // expanding & sticky navbar\n        factor = navbarSpace / scrollLimit;\n        calculatedAdd = Math.floor(((windowTop / 100 ) * factor) * 100);\n        maxWidth = navbarWidth + calculatedAdd;\n        if (windowTop < scrollLimit) {\n            navbar.css('max-width',maxWidth);\n            navbar.removeClass('sticky');\n        } else {\n            navbar.css('max-width','100%');\n            navbar.addClass('sticky');\n        }\n\n        // sticky messenger button\n        if (windowTop > 100) {\n            $('#messengerButton').css('bottom',0);\n        } else {\n            $('#messengerButton').css('bottom','-5rem');\n        }\n\n    });\n});\n\n\n\nclass App extends Component {\n  render() {\n\n    return (\n        <section>\n            <Header />\n            <Content />\n            <Footer />\n        </section>\n\n    );\n  }\n}\n\n\n\nexport default App;\n\n/*\nfunction AlertDismissibleExample() {\n  const [show, setShow] = useState(false);\n\n  if (show) {\n    return (\n        <Alert variant=\"danger\" onClose={() => setShow(false)} dismissible>\n          <Alert.Heading>I am an alert of type <span className=\"dangerText\">danger</span>! But my color is Teal!</Alert.Heading>\n          <p>\n            By the way the button you just clicked is an <span className=\"infoText\">Info</span> button but is using the color Tomato.\n            Lorem ipsum dolor sit amet, consectetur adipisicing elit.\n            Accusantium debitis deleniti distinctio impedit officia reprehenderit suscipit voluptatibus. Earum, nam necessitatibus!\n          </p>\n        </Alert>\n    );\n  }\n  return <Button variant=\"info\" onClick={() => setShow(true)}>Show Custom Styled Alert</Button>;\n}\n\nconst App = () => (\n    <Container className=\"p-3\">\n      <Jumbotron className=\"pb-1\">\n        <h1 className=\"header\">Welcome To React-Bootstrap</h1>\n        <h2 className=\"header\">Using Sass with custom theming</h2>\n        <AlertDismissibleExample />\n        <hr/>\n        <p>\n          You can check further in information on the official Bootstrap docs <a href=\"https://getbootstrap.com/docs/4.3/getting-started/theming/#importing\" target=\"_blank\">here</a>.\n        </p>\n      </Jumbotron>\n    </Container>\n);\n\nexport default App;*/\n"]},"metadata":{},"sourceType":"module"}